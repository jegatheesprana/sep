{"version":3,"sources":["useRecorder.js","Audio.js","Editor.js","FileBrowser/details/default.js","FileBrowser/filters/default.js","FileBrowser/utils.js","FileBrowser/constants.js","FileBrowser/base-file.js","FileBrowser/headers/table.js","FileBrowser/files/utils.js","FileBrowser/files/list-thumbnail.js","FileBrowser/files/table.js","FileBrowser/files/simple-list-thumbnail.js","FileBrowser/base-folder.js","FileBrowser/folders/list-thumbnail.js","FileBrowser/folders/table.js","FileBrowser/confirmations/default.js","FileBrowser/confirmations/multiple.js","FileBrowser/groupers/by-modified.js","FileBrowser/sorters/utils.js","FileBrowser/sorters/by-name.js","FileBrowser/sorters/by-modified.js","FileBrowser/actions/default.js","FileBrowser/browser.js","FileBrowser/groupers/by-folder.js","FileBrowser/icons/FontAwesome.js","FileBrowser/index.js","FileManager.js","App.js","index.js"],"names":["audioEle","Audio","a","navigator","mediaDevices","getUserMedia","audio","useRecorder","useState","audioURL","setAudioURL","recorder","setRecorder","listen","setListen","useEffect","handleData","e","URL","createObjectURL","data","addEventListener","removeEventListener","requestRecorder","then","stream","MediaRecorder","srcObject","console","log","src","window","error","play","pause","start","resume","stop","mediaRecorder","handleStart","handlePause","handleStop","handleListen","handleTimeChange","handleAudioOnPlay","state","className","onClick","title","disabled","onTimeUpdate","ref","onPlay","controls","Editor","value","onChange","setEditor","file","language","name","key","slashIndex","lastIndexOf","substr","onBeforeChange","editor","editorDidMount","options","linerWrapping","lint","mode","theme","lineNumbers","autoCloseBrackets","matchBrackets","Detail","handleCloseClick","event","preventDefault","props","close","this","split","length","href","React","Component","Filter","handleFilterChange","newValue","target","updateFilter","type","placeholder","isFolder","endsWith","moveFilesAndFolders","monitor","component","didDrop","dropResult","getDropResult","folders","files","browserProps","selection","forEach","push","openFolder","path","fileKey","fileNameParts","folderName","newKey","moveFolder","fileName","moveFile","extensionMapping","Object","entries","Archive","Excel","Image","PDF","PowerPoint","Text","Video","Word","Code","extensions","extension","BaseFileConnectors","dragSource","beginDrag","includes","select","endDrag","dragCollect","connect","connectDragPreview","dragPreview","connectDragSource","isDragging","targetSource","drop","item","getItem","createFile","targetCollect","connectDropTarget","dropTarget","isOver","shallow","BaseFile","newName","isDraft","getName","handleFileClick","preview","url","getExtension","handleItemClick","stopPropagation","ctrlKey","metaKey","shiftKey","handleItemDoubleClick","handleRenameClick","renameFile","beginAction","handleNewNameChange","setState","handleRenameSubmit","trim","some","char","indexOf","handleDeleteClick","deleteFile","handleDeleteSubmit","actionTargets","handleCancelEdit","endAction","element","currentName","pointIndex","setSelectionRange","focus","blobs","toLowerCase","render","inAction","action","isRenaming","RawTableHeader","header","ClassNames","dragover","selected","isSelected","createFiles","TableHeader","DropTarget","NativeTypes","FILE","fileSize","size","kbSize","floatValue","precision","parseFloat","isNaN","toFixed","power","Math","pow","round","toString","floatPrecision","RawListThumbnailFile","icon","thumbnailUrl","thumbnail_url","isSelectable","isDeleting","showName","showSize","showModified","style","backgroundImage","icons","getFileType","File","modified","ConfirmDeletionRenderer","confirmDeletionRenderer","onSubmit","selectFileNameFromRef","onBlur","autoFocus","download","formatDistanceToNow","addSuffix","rowProps","row","pending","dragging","onDoubleClick","connectDND","defaultProps","ListThumbnailFile","flow","DragSource","RawTableFile","depth","draggable","paddingLeft","TableFile","BaseFolderConnectors","BaseFolder","handleFolderClick","handleFolderDoubleClick","toggleFolder","renameFolder","createFolder","deleteFolder","keyDerived","RawListThumbnailFolder","children","isOpen","selectFolderNameFromRef","nestChildren","childIndex","thisItemProps","getItemProps","folderRenderer","folderRendererProps","fileRenderer","fileRendererProps","padding","folder","expanded","RawTableFolder","TableFolder","ConfirmDeletion","MultipleConfirmDeletion","NUMBER_GROUPS","naturalSortComparer","b","aa","String","bb","min","i","x","y","naturalDraftComparer","draft","naturalSort","allFiles","fileIndex","keyFolders","sort","folderIndex","sortedFiles","concat","Actions","selectedItems","nameFilter","canCreateFile","onCreateFile","canCreateFolder","onCreateFolder","canRenameFile","onRenameFile","canRenameFolder","onRenameFolder","canDeleteFile","onDeleteFile","canDeleteFolder","onDeleteFolder","canDownloadFile","onDownloadFile","canDownloadFolder","onDownloadFolder","actions","selectedItemsAction","filter","Set","actionText","Loading","role","Folder","id","itemsWithoutKeyDerived","find","Rename","Delete","Download","SEARCH_RESULTS_PER_PAGE","regexForNewFolderOrFileSelection","openFolders","activeAction","RawFileBrowser","searchResultsShown","previewFile","addFolder","getFile","hasPrefix","exactFolder","f","startsWith","relativeKey","prefix","prevState","stateChanges","oldKey","onMoveFile","onMoveFolder","replace","keys","downloadFile","downloadFolder","match","selectedType","shouldClearState","newSelection","indexOfKey","slice","onSelect","onSelectFile","onSelectFolder","closeDetail","onPreviewOpen","onPreviewClose","handleShowMoreClick","folderKey","callback","onFolderOpen","handleGlobalClick","inBrowser","browserRef","contains","handleActionBarRenameClick","handleActionBarDeleteClick","handleActionBarAddFolderClick","addKey","handleActionBarAddFileClick","openFiles","handleActionBarDownloadClick","getFiles","getSelectedItems","handleMultipleDeleteSubmit","renderStyle","warn","confirmMultipleDeletionRenderer","undefined","canFilter","filterRendererProps","FilterRenderer","filterRenderer","ActionRenderer","actionRenderer","getBrowserProps","selectionIsFolder","FileRenderer","FolderRenderer","renderedFiles","map","showFoldersOnFilter","renderFiles","filteredFiles","terms","skip","term","group","newFiles","findSelected","headerProps","fileCount","contents","colSpan","noFilesMessage","headerRenderer","headerRendererProps","cellSpacing","cellPadding","more","ConfirmMultipleDeletionRenderer","el","showActionBar","renderActionBar","root","fileTree","currentFolder","addAllChildren","level","startOpen","DefaultFilter","detailRenderer","DefaultDetail","detailRendererProps","DefaultAction","DefaultConfirmDeletion","fileOrFolder","onFolderClose","FileBrowser","DndProvider","backend","HTML5Backend","IsFontAwesomeLoaded","version","fontNames","FontAwesomeLoaded","span","document","createElement","display","body","insertBefore","firstChild","property","getComputedStyle","getPropertyValue","removeChild","FontAwesomeIcons","majorVersion","FolderOpen","FileManager","setCurrentFile","setFiles","handleRenameFolder","handleRenameFile","Icons","FontAwesome","watch","cm","stopwatch","App","startRecording","pauseRecording","resumeRecording","stopRecording","content","records","setRecords","setPlay","currentFile","editorValue","setEditorValue","useRef","co","height","prevFiles","time","duration","seconds","background","record","current","currentTime","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.962eda27.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nlet audioEle = new Audio()\r\n\r\nconst useRecorder = () => {\r\n    const [audioURL, setAudioURL] = useState(\"\");\r\n    const [recorder, setRecorder] = useState(null);\r\n    const [listen, setListen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Lazily obtain recorder first time we're recording.\r\n        if (recorder === null) {\r\n            requestRecorder().then(stream => {\r\n                setRecorder(new MediaRecorder(stream))\r\n                if (\"srcObject\" in audioEle) {\r\n                    audioEle.srcObject = stream\r\n                } else {\r\n                    console.log('no srcObject')\r\n                    audioEle.src = window.URL.createObjectURL(stream)\r\n                }\r\n            }, console.error);\r\n            return;\r\n        }\r\n\r\n        // Obtain the audio when ready.\r\n        const handleData = e => {\r\n            setAudioURL(URL.createObjectURL(e.data));\r\n        };\r\n\r\n        recorder.addEventListener(\"dataavailable\", handleData);\r\n        return () => recorder.removeEventListener(\"dataavailable\", handleData);\r\n    }, [recorder]);\r\n\r\n    useEffect(() => {\r\n        if (listen) {\r\n            console.log('listening')\r\n            audioEle.play()\r\n        } else {\r\n            audioEle.pause()\r\n        }\r\n    }, [listen])\r\n\r\n    const startRecording = () => {\r\n        recorder.start();\r\n    };\r\n\r\n    const pauseRecording = () => {\r\n        recorder.pause();\r\n    };\r\n\r\n    const resumeRecording = () => {\r\n        recorder.resume();\r\n    };\r\n\r\n    const stopRecording = () => {\r\n        recorder.stop();\r\n    };\r\n\r\n    const toggleListen = () => {\r\n        setListen(!listen)\r\n    }\r\n\r\n    return [audioURL, recorder, startRecording, pauseRecording, resumeRecording, stopRecording, toggleListen];\r\n};\r\n\r\nasync function requestRecorder() {\r\n    return await navigator.mediaDevices.getUserMedia({ audio: true });\r\n}\r\nexport default useRecorder;","import './Audio.css'\r\nimport {\r\n    Circle as CircleIcon,\r\n    Volume2 as Volume2Icon,\r\n    Pause as PauseIcon,\r\n    Square as SquareIcon,\r\n    Play as PlayIcon,\r\n} from 'react-feather';\r\n\r\nconst Audio = ({ mediaRecorder, handleStart, handlePause, handleStop, handleListen, audioURL, handleTimeChange, audioEle, handleAudioOnPlay }) => {\r\n    console.log(mediaRecorder?.state)\r\n    return (\r\n        <div className=\"audio-wrapper\">\r\n            {mediaRecorder &&\r\n                <>\r\n                    <div className=\"controls-cont\">\r\n                        {\r\n                            (mediaRecorder.state === 'inactive') ?\r\n                                <button className=\"start\" onClick={handleStart} title=\"Start Recording\">\r\n                                    <CircleIcon />\r\n                                </button>\r\n                                : (mediaRecorder.state === 'recording') ?\r\n                                    <button className=\"start\" onClick={handlePause} title=\"Pause Recording\">\r\n                                        <PauseIcon />\r\n                                    </button>\r\n                                    : <button className=\"start\" onClick={handlePause} title=\"Resume Recording\">\r\n                                        <CircleIcon />\r\n                                    </button>\r\n                        }\r\n                        <button className=\"end\" onClick={handleStop} disabled={mediaRecorder.state !== 'recording' && mediaRecorder.state !== 'paused'} title=\"Stop Recording\">\r\n                            <SquareIcon />\r\n                        </button>\r\n                        <button className=\"listen\" onClick={handleListen} title=\"Test audio\">\r\n                            <Volume2Icon />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"audio-cont\">\r\n                        <audio src={audioURL} onTimeUpdate={handleTimeChange} ref={audioEle} onPlay={handleAudioOnPlay} controls></audio>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Audio;","import { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport 'codemirror/addon/edit/closebrackets'\r\nimport 'codemirror/addon/edit/matchbrackets'\r\nimport './Editor.css'\r\n// import 'codemirror/'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\n\r\nconst Editor = ({ value, onChange, setEditor, file, language = \"javascript\" }) => {\r\n\r\n    const [open, setOpen] = useState(true)\r\n\r\n    const handleChange = (editor, data, value) => {\r\n        //console.log(data)\r\n        onChange(value)\r\n        //onChange(data)\r\n    }\r\n    let name = ''\r\n    if (file.key) {\r\n        name = file.key\r\n        const slashIndex = name.lastIndexOf('/')\r\n        if (slashIndex !== -1) {\r\n            name = name.substr(slashIndex + 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"editor-container\">\r\n            <div className=\"editor-title\">\r\n                {name}\r\n            </div>\r\n            {file.key\r\n                ? <ControlledEditor\r\n                    onBeforeChange={handleChange}\r\n                    onChange={(editor, data, value) => {\r\n                        //console.log(value)\r\n                    }}\r\n                    editorDidMount={(editor) => {\r\n                        setEditor(editor)\r\n                    }}\r\n                    value={value}\r\n                    className=\"code-mirror-wrapper\"\r\n                    options={{\r\n                        linerWrapping: true,\r\n                        lint: true,\r\n                        mode: language,\r\n                        theme: 'material',\r\n                        lineNumbers: true,\r\n                        autoCloseBrackets: true,\r\n                        matchBrackets: true\r\n                    }}\r\n                />\r\n                : <div className=\"CodeMirror noFile\">\r\n                    <p>Select File</p>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Editor;","import PropTypes from 'prop-types'\nimport React from 'react'\n\nclass Detail extends React.Component {\n  static propTypes = {\n    file: PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      extension: PropTypes.string.isRequired,\n      url: PropTypes.string,\n    }).isRequired,\n    close: PropTypes.func,\n  }\n\n  handleCloseClick = (event) => {\n    if (event) {\n      event.preventDefault()\n    }\n    this.props.close()\n  }\n\n  render() {\n    let name = this.props.file.key.split('/')\n    name = name.length ? name[name.length - 1] : ''\n\n    return (\n      <div>\n        <h2>Item Detail</h2>\n        <dl>\n          <dt>Key</dt>\n          <dd>{this.props.file.key}</dd>\n\n          <dt>Name</dt>\n          <dd>{name}</dd>\n        </dl>\n        <a href=\"#\" onClick={this.handleCloseClick}>Close</a>\n      </div>\n    )\n  }\n}\n\nexport default Detail\n","import PropTypes from 'prop-types'\nimport React from 'react'\n\nclass Filter extends React.Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    updateFilter: PropTypes.func,\n  }\n\n  handleFilterChange = (event) => {\n    const newValue = event.target.value\n    this.props.updateFilter(newValue)\n  }\n\n  render() {\n    return (\n      <input\n        type=\"search\"\n        placeholder=\"Filter files\"\n        value={this.props.value}\n        onChange={this.handleFilterChange}\n      />\n    )\n  }\n}\n\nexport default Filter\n","function isFolder(file) {\n  //return true\n  return file.key.endsWith('/')\n}\n\nfunction moveFilesAndFolders(props, monitor, component) {\n  if (!monitor.didDrop()) {\n    return\n  }\n\n  const dropResult = monitor.getDropResult()\n\n  const folders = []\n  const files = []\n\n  props.browserProps.selection.forEach(selection => {\n    selection[selection.length - 1] === '/' ? folders.push(selection) : files.push(selection)\n  })\n\n  props.browserProps.openFolder(dropResult.path)\n\n  folders\n    .forEach(selection => {\n      const fileKey = selection\n      const fileNameParts = fileKey.split('/')\n      const folderName = fileNameParts[fileNameParts.length - 2]\n\n      const newKey = `${dropResult.path}${folderName}/`\n      // abort if the new folder name contains itself\n      if (newKey.substr(0, fileKey.length) === fileKey) return\n\n      if (newKey !== fileKey && props.browserProps.moveFolder) {\n        props.browserProps.moveFolder(fileKey, newKey)\n      }\n    })\n\n  files\n    .forEach(selection => {\n      const fileKey = selection\n      const fileNameParts = fileKey.split('/')\n      const fileName = fileNameParts[fileNameParts.length - 1]\n      const newKey = `${dropResult.path}${fileName}`\n      if (newKey !== fileKey && props.browserProps.moveFile) {\n        props.browserProps.moveFile(fileKey, newKey)\n      }\n    })\n}\n\nexport { isFolder, moveFilesAndFolders }\n","const FILETYPE_EXTENSIONS = {\n  Archive: [\n    'zip',\n    'rar',\n    '7z',\n  ],\n  Audio: [\n    'mp3',\n    'ogg',\n    'wav',\n    'aac',\n  ],\n  Excel: [\n    'xls',\n    'xlsx',\n  ],\n  Image: [\n    'jpg',\n    'jpeg',\n    'png',\n    'bmp',\n  ],\n  PDF: [\n    'pdf',\n  ],\n  PowerPoint: [\n    'ppt',\n    'pptx',\n  ],\n  Text: [\n    'txt',\n  ],\n  Video: [\n    'mp4',\n    'flv',\n    'avi',\n    'wmv',\n    'mov',\n  ],\n  Word: [\n    'doc',\n    'docx',\n  ],\n  Code: [\n    'js',\n  ],\n}\n\nconst extensionMapping = {}\n\nfor (const [type, extensions] of Object.entries(FILETYPE_EXTENSIONS)) {\n  for (const extension of extensions) {\n    extensionMapping[extension] = type\n  }\n}\n\nexport { extensionMapping }\n","// @ts-nocheck\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { moveFilesAndFolders } from './utils'\nimport { extensionMapping } from './constants.js'\n\nclass BaseFile extends React.Component {\n  static propTypes = {\n    fileKey: PropTypes.string,\n    url: PropTypes.string,\n\n    newKey: PropTypes.string,\n    isRenaming: PropTypes.bool,\n\n    connectDragSource: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n    isDragging: PropTypes.bool,\n    action: PropTypes.string,\n\n    browserProps: PropTypes.shape({\n      icons: PropTypes.object,\n      select: PropTypes.func,\n      beginAction: PropTypes.func,\n      endAction: PropTypes.func,\n      preview: PropTypes.func,\n\n      createFile: PropTypes.func,\n      moveFile: PropTypes.func,\n      moveFolder: PropTypes.func,\n      renameFile: PropTypes.func,\n      deleteFile: PropTypes.func,\n    }),\n  }\n\n  state = {\n    newName: this.props.isDraft ? 'file' : this.getName(),\n  }\n\n  selectFileNameFromRef(element) {\n    if (element) {\n      const currentName = element.value\n      const pointIndex = currentName.lastIndexOf('.')\n      element.setSelectionRange(0, pointIndex || currentName.length)\n      element.focus()\n    }\n  }\n\n  getName() {\n    let name = this.props.newKey || this.props.fileKey\n    const slashIndex = name.lastIndexOf('/')\n    if (slashIndex !== -1) {\n      name = name.substr(slashIndex + 1)\n    }\n    return name\n  }\n  getExtension() {\n    const blobs = this.props.fileKey.split('.')\n    return blobs[blobs.length - 1].toLowerCase().trim()\n  }\n\n  getFileType() {\n    return extensionMapping[this.getExtension()] || 'File'\n  }\n\n  handleFileClick = (event) => {\n    event && event.preventDefault()\n    this.props.browserProps.preview({\n      url: this.props.url,\n      name: this.getName(),\n      key: this.props.fileKey,\n      extension: this.getExtension(),\n    })\n  }\n  handleItemClick = (event) => {\n    event.stopPropagation()\n    this.props.browserProps.select(this.props.fileKey, 'file', event.ctrlKey || event.metaKey, event.shiftKey)\n  }\n  handleItemDoubleClick = (event) => {\n    event.stopPropagation()\n    this.handleFileClick()\n  }\n\n  handleRenameClick = (event) => {\n    if (!this.props.browserProps.renameFile) {\n      return\n    }\n    this.props.browserProps.beginAction('rename', this.props.fileKey)\n  }\n  handleNewNameChange = (event) => {\n    const newName = event.target.value\n    this.setState({ newName: newName })\n  }\n  handleRenameSubmit = (event) => {\n    if (event) {\n      event.preventDefault()\n    }\n    event.preventDefault()\n    event.stopPropagation()\n    if (!this.props.browserProps.renameFile && !this.props.isDraft) {\n      return\n    }\n    const newName = this.state.newName.trim()\n    if (newName.length === 0) {\n      // todo: move to props handler\n      // window.notify({\n      //   style: 'error',\n      //   title: 'Invalid new file name',\n      //   body: 'File name cannot be blank',\n      // })\n      return\n    }\n    const invalidChar = ['/', '\\\\']\n    if (invalidChar.some(char => newName.indexOf(char) !== -1)) return\n    // todo: move to props handler\n    // window.notify({\n    //   style: 'error',\n    //   title: 'Invalid new file name',\n    //   body: 'File names cannot contain forward slashes.',\n    // })\n    let newKey = this.props.fileKey.substr(0, this.props.fileKey.substr(0, this.props.fileKey.length - 1).lastIndexOf('/'))\n    if (newKey.length) {\n      newKey += '/'\n    }\n    newKey += newName\n    const slashIndex = this.props.fileKey.lastIndexOf('/')\n    if (slashIndex !== -1) {\n      newKey = `${this.props.fileKey.substr(0, slashIndex)}/${newName}`\n    }\n    if (this.props.isDraft) {\n      this.props.browserProps.createFile(newKey)\n    } else {\n      this.props.browserProps.renameFile(this.props.fileKey, newKey)\n    }\n  }\n\n  handleDeleteClick = (event) => {\n    if (!this.props.browserProps.deleteFile) {\n      return\n    }\n    this.props.browserProps.beginAction('delete', this.props.fileKey)\n  }\n  handleDeleteSubmit = (event) => {\n    event.preventDefault()\n    if (!this.props.browserProps.deleteFile) {\n      return\n    }\n\n    this.props.browserProps.deleteFile(this.props.browserProps.actionTargets)\n  }\n\n  handleCancelEdit = (event) => {\n    this.props.browserProps.endAction()\n  }\n\n  connectDND(render) {\n    const inAction = (this.props.isDragging || this.props.action)\n    if (\n      typeof this.props.browserProps.moveFile === 'function' &&\n      !inAction &&\n      !this.props.isRenaming\n    ) {\n      render = this.props.connectDragSource(render)\n    }\n    if (\n      typeof this.props.browserProps.createFile === 'function' ||\n      typeof this.props.browserProps.moveFile === 'function' ||\n      typeof this.props.browserProps.moveFolder === 'function'\n    ) {\n      render = this.props.connectDropTarget(render)\n    }\n    return render\n  }\n}\n\nconst dragSource = {\n  beginDrag(props) {\n    if (\n      !props.browserProps.selection.length ||\n      !props.browserProps.selection.includes(props.fileKey)\n    ) {\n      props.browserProps.select(props.fileKey, 'file')\n    }\n    return {\n      key: props.fileKey,\n    }\n  },\n\n  endDrag(props, monitor, component) {\n    moveFilesAndFolders(props, monitor, component)\n  },\n}\n\nfunction dragCollect(connect, monitor) {\n  return {\n    connectDragPreview: connect.dragPreview(),\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  }\n}\n\nconst targetSource = {\n  drop(props, monitor) {\n    if (monitor.didDrop()) {\n      return\n    }\n    const key = props.newKey || props.fileKey\n    const slashIndex = key.lastIndexOf('/')\n    const path = (slashIndex !== -1) ? key.substr(0, slashIndex + 1) : ''\n    const item = monitor.getItem()\n    if (item.files && props.browserProps.createFile) {\n      props.browserProps.createFile(item.files, path)\n    }\n    return {\n      path: path,\n    }\n  },\n}\n\nfunction targetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver({ shallow: true }),\n  }\n}\n\nconst BaseFileConnectors = {\n  dragSource,\n  dragCollect,\n  targetSource,\n  targetCollect,\n}\n\nexport default BaseFile\nexport {\n  BaseFileConnectors,\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport ClassNames from 'classnames'\n\nimport { DropTarget } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\n\nimport { BaseFileConnectors } from './../base-file.js'\n\nclass RawTableHeader extends React.Component {\n  static propTypes = {\n    select: PropTypes.func,\n    fileKey: PropTypes.string,\n\n    connectDropTarget: PropTypes.func,\n    isOver: PropTypes.bool,\n    isSelected: PropTypes.func,\n\n    browserProps: PropTypes.shape({\n      createFiles: PropTypes.func,\n      moveFolder: PropTypes.func,\n      moveFile: PropTypes.func,\n    }),\n  }\n\n  handleHeaderClick(event) {\n    this.props.select(this.props.fileKey)\n  }\n\n  render() {\n    const header = (\n      <tr\n        className={ClassNames('folder', {\n          dragover: this.props.isOver,\n          selected: this.props.isSelected,\n        })}\n      >\n        <th>File</th>\n        {/* <th className=\"size\">Size</th>\n        <th className=\"modified\">Last Modified</th> */}\n      </tr>\n    )\n\n    if (\n      typeof this.props.browserProps.createFiles === 'function' ||\n      typeof this.props.browserProps.moveFile === 'function' ||\n      typeof this.props.browserProps.moveFolder === 'function'\n    ) {\n      return this.props.connectDropTarget(header)\n    } else {\n      return header\n    }\n  }\n}\n\nconst TableHeader = DropTarget(\n  ['file', 'folder', NativeTypes.FILE],\n  BaseFileConnectors.targetSource,\n  BaseFileConnectors.targetCollect\n)(RawTableHeader)\n\nexport default TableHeader\nexport { RawTableHeader }\n","function floatPrecision(floatValue, precision) {\n  floatValue = parseFloat(floatValue)\n  if (isNaN(floatValue)) { return parseFloat('0').toFixed(precision) } else {\n    const power = Math.pow(10, precision)\n    floatValue = (Math.round(floatValue * power) / power).toFixed(precision)\n    return floatValue.toString()\n  }\n}\n\nfunction fileSize(size) {\n  if (size > 1024) {\n    const kbSize = size / 1024\n    if (kbSize > 1024) {\n      const mbSize = kbSize / 1024\n      return `${floatPrecision(mbSize, 2)} MB`\n    }\n    return `${Math.round(kbSize)} kB`\n  }\n  return `${size} B`\n}\n\nexport { floatPrecision, fileSize }\n","import React from 'react'\nimport ClassNames from 'classnames'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport { formatDistanceToNow } from 'date-fns'\nimport flow from 'lodash/flow'\n\nimport BaseFile, { BaseFileConnectors } from './../base-file.js'\nimport { fileSize } from './utils.js'\n\nclass RawListThumbnailFile extends BaseFile {\n  static defaultProps = {\n    showName: true,\n    showSize: true,\n    showModified: true,\n    isSelectable: true,\n  }\n\n  render() {\n    const {\n      thumbnail_url: thumbnailUrl, action, url,\n      isDragging, isRenaming, isSelected, isSelectable, isOver, isDeleting,\n      showName, showSize, showModified, browserProps, connectDragPreview,\n    } = this.props\n\n    let icon\n    if (thumbnailUrl) {\n      icon = (\n        <div\n          className=\"image\"\n          style={{\n            backgroundImage: 'url(' + thumbnailUrl + ')',\n          }}\n        />\n      )\n    } else {\n      icon = browserProps.icons[this.getFileType()] || browserProps.icons.File\n    }\n\n    const inAction = (isDragging || action)\n\n    const ConfirmDeletionRenderer = browserProps.confirmDeletionRenderer\n\n    let name\n    if (showName) {\n      if (!inAction && isDeleting && browserProps.selection.length === 1) {\n        name = (\n          <ConfirmDeletionRenderer\n            handleDeleteSubmit={this.handleDeleteSubmit}\n            handleFileClick={this.handleFileClick}\n            url={url}\n          >\n            {this.getName()}\n          </ConfirmDeletionRenderer>\n        )\n      } else if (!inAction && isRenaming) {\n        name = (\n          <form className=\"renaming\" onSubmit={this.handleRenameSubmit}>\n            <input\n              ref={this.selectFileNameFromRef}\n              type=\"text\"\n              value={this.state.newName}\n              onChange={this.handleNewNameChange}\n              onBlur={this.handleCancelEdit}\n              autoFocus\n            />\n          </form>\n        )\n      } else {\n        name = (\n          <a href={url} download=\"download\" onClick={this.handleFileClick}>\n            {this.getName()}\n          </a>\n        )\n      }\n    }\n\n    let size\n    if (showSize) {\n      if (!isRenaming && !isDeleting) {\n        size = (\n          <span className=\"size\"><small>{fileSize(this.props.size)}</small></span>\n        )\n      }\n    }\n    let modified\n    if (showModified) {\n      if (!isRenaming && !isDeleting) {\n        modified = (\n          <span className=\"modified\">\n            Last modified: {formatDistanceToNow(this.props.modified, { addSuffix: true })}\n          </span>\n        )\n      }\n    }\n\n    let rowProps = {}\n    if (isSelectable) {\n      rowProps = {\n        onClick: this.handleItemClick,\n      }\n    }\n\n    let row = (\n      <li\n        className={ClassNames('file', {\n          pending: action,\n          dragging: isDragging,\n          dragover: isOver,\n          selected: isSelected,\n        })}\n        onDoubleClick={this.handleItemDoubleClick}\n        {...rowProps}\n      >\n        <div className=\"item\">\n          <span className=\"thumb\">{icon}</span>\n          <span className=\"name\">{name}</span>\n          {size}\n          {modified}\n        </div>\n      </li>\n    )\n    if (typeof browserProps.moveFile === 'function') {\n      row = connectDragPreview(row)\n    }\n\n    return this.connectDND(row)\n  }\n}\n\nconst ListThumbnailFile = flow(\n  DragSource('file', BaseFileConnectors.dragSource, BaseFileConnectors.dragCollect), \n  DropTarget(['file', 'folder', NativeTypes.FILE], BaseFileConnectors.targetSource, BaseFileConnectors.targetCollect)\n)(RawListThumbnailFile)\n\nexport default ListThumbnailFile\nexport { RawListThumbnailFile }\n","import React from 'react'\nimport ClassNames from 'classnames'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport { formatDistanceToNow } from 'date-fns'\nimport flow from 'lodash/flow'\n\nimport BaseFile, { BaseFileConnectors } from './../base-file.js'\nimport { fileSize } from './utils.js'\n\nclass RawTableFile extends BaseFile {\n  render() {\n    const {\n      isDragging, isDeleting, isRenaming, isDraft, isOver, isSelected,\n      action, url, browserProps, connectDragPreview,\n      depth, size, modified,\n    } = this.props\n\n    const icon = browserProps.icons[this.getFileType()] || browserProps.icons.File\n    const inAction = (isDragging || action)\n\n    const ConfirmDeletionRenderer = browserProps.confirmDeletionRenderer\n\n    let name\n    if (!inAction && isDeleting && browserProps.selection.length === 1) {\n      name = (\n        <ConfirmDeletionRenderer\n          handleDeleteSubmit={this.handleDeleteSubmit}\n          handleFileClick={this.handleFileClick}\n          url={url}\n        >\n          {icon}\n          {this.getName()}\n        </ConfirmDeletionRenderer>\n      )\n    } else if ((!inAction && isRenaming) || isDraft) {\n      name = (\n        <form className=\"renaming\" onSubmit={this.handleRenameSubmit}>\n          {icon}\n          <input\n            ref={this.selectFileNameFromRef}\n            type=\"text\"\n            value={this.state.newName}\n            onChange={this.handleNewNameChange}\n            onBlur={this.handleCancelEdit}\n            autoFocus\n          />\n        </form>\n      )\n    } else {\n      name = (\n        <a\n          href={url || '#'}\n          download=\"download\"\n          onClick={this.handleFileClick}\n        >\n          {icon}\n          {this.getName()}\n        </a>\n      )\n    }\n\n    let draggable = (\n      <div>\n        {name}\n      </div>\n    )\n    if (typeof browserProps.moveFile === 'function') {\n      draggable = connectDragPreview(draggable)\n    }\n\n    const row = (\n      <tr\n        className={ClassNames('file', {\n          pending: action,\n          dragging: isDragging,\n          dragover: isOver,\n          selected: isSelected,\n        })}\n        onClick={this.handleItemClick}\n        onDoubleClick={this.handleItemDoubleClick}\n      >\n        <td className=\"name\">\n          <div style={{ paddingLeft: (depth * 16) + 'px' }}>\n            {draggable}\n          </div>\n        </td>\n        {/* <td className=\"size\">{fileSize(size)}</td>\n        <td className=\"modified\">\n          {typeof modified === 'undefined' ? '-' : formatDistanceToNow(modified, { addSuffix: true })}\n        </td> */}\n      </tr>\n    )\n    return this.connectDND(row)\n  }\n}\n\nconst TableFile = flow(\n  DragSource('file', BaseFileConnectors.dragSource, BaseFileConnectors.dragCollect),\n  // DragSource('folder', BaseFileConnectors.dragSource, BaseFileConnectors.dragCollect),\n  DropTarget(['file', 'folder', NativeTypes.FILE], BaseFileConnectors.targetSource, BaseFileConnectors.targetCollect)\n)(RawTableFile)\n\nexport default TableFile\nexport { RawTableFile }\n","import React from 'react'\n\nimport ListThumbnailFile from './list-thumbnail.js'\n\nclass SimpleListThumbnailFile extends React.Component {\n  render() {\n    return (\n      <ListThumbnailFile\n        {...this.props}\n        showName={false}\n        showSize={false}\n        showModified={false}\n        isSelectable={false}\n      />\n    )\n  }\n}\n\nexport default SimpleListThumbnailFile\n","// @ts-nocheck\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { moveFilesAndFolders } from './utils'\n\nclass BaseFolder extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    fileKey: PropTypes.string,\n\n    newName: PropTypes.string,\n    keyDerived: PropTypes.bool,\n    isDraft: PropTypes.bool,\n    isRenaming: PropTypes.bool,\n    isDeleting: PropTypes.bool,\n\n    connectDragSource: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n    isDragging: PropTypes.bool,\n    action: PropTypes.string,\n\n    browserProps: PropTypes.shape({\n      select: PropTypes.func,\n      toggleFolder: PropTypes.func,\n      beginAction: PropTypes.func,\n      endAction: PropTypes.func,\n      preview: PropTypes.func,\n\n      createFiles: PropTypes.func,\n      createFolder: PropTypes.func,\n      moveFile: PropTypes.func,\n      moveFolder: PropTypes.func,\n      renameFolder: PropTypes.func,\n      deleteFolder: PropTypes.func,\n    }),\n  }\n\n  state = {\n    newName: this.props.isDraft ? 'New folder' : this.getName(),\n  }\n\n  selectFolderNameFromRef(element) {\n    if (element) {\n      const currentName = element.value\n      element.setSelectionRange(0, currentName.length)\n      element.focus()\n    }\n  }\n\n  getName() {\n    if (this.props.name) {\n      return this.props.name\n    }\n    const folders = this.props.fileKey.split('/')\n    return this.props.newName || folders[folders.length - 2]\n  }\n\n  handleFolderClick = (event) => {\n    event.stopPropagation()\n    this.props.browserProps.select(this.props.fileKey, 'folder', event.ctrlKey || event.metaKey, event.shiftKey)\n  }\n  handleFolderDoubleClick = (event) => {\n    event.stopPropagation()\n    this.toggleFolder()\n  }\n\n  handleRenameClick = (event) => {\n    if (!this.props.browserProps.renameFolder) {\n      return\n    }\n    this.props.browserProps.beginAction('rename', this.props.fileKey)\n  }\n  handleNewNameChange = (event) => {\n    const newName = event.target.value\n    this.setState({ newName: newName })\n  }\n  handleRenameSubmit = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    if (!this.props.browserProps.renameFolder && !this.props.isDraft) {\n      return\n    }\n    const newName = this.state.newName.trim()\n    if (newName.length === 0) {\n      // todo: move to props handler\n      // window.notify({\n      //   style: 'error',\n      //   title: 'Invalid new folder name',\n      //   body: 'Folder name cannot be blank',\n      // })\n      return\n    }\n    const invalidChar = ['/', '\\\\']\n    if (invalidChar.some(char => newName.indexOf(char) !== -1)) return\n    // todo: move to props handler\n    // window.notify({\n    //   style: 'error',\n    //   title: 'Invalid new folder name',\n    //   body: 'Folder names cannot contain forward slashes.',\n    // })\n\n    let newKey = this.props.fileKey.substr(0, this.props.fileKey.substr(0, this.props.fileKey.length - 1).lastIndexOf('/'))\n    if (newKey.length) {\n      newKey += '/'\n    }\n    newKey += newName\n    newKey += '/'\n    if (this.props.isDraft) {\n      this.props.browserProps.createFolder(newKey)\n    } else {\n      this.props.browserProps.renameFolder(this.props.fileKey, newKey)\n    }\n  }\n\n  handleDeleteClick = (event) => {\n    if (!this.props.browserProps.deleteFolder) {\n      return\n    }\n    this.props.browserProps.beginAction('delete', this.props.fileKey)\n  }\n  handleDeleteSubmit = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    if (!this.props.browserProps.deleteFolder) {\n      return\n    }\n    this.props.browserProps.deleteFolder(this.props.browserProps.actionTargets)\n  }\n\n  handleCancelEdit = (event) => {\n    this.props.browserProps.endAction()\n  }\n\n  toggleFolder = () => {\n    this.props.browserProps.toggleFolder(this.props.fileKey)\n  }\n\n  connectDND(render) {\n    const inAction = (this.props.isDragging || this.props.action)\n    if (this.props.keyDerived) {\n      if (\n        typeof this.props.browserProps.moveFolder === 'function' &&\n        !inAction &&\n        !this.props.isRenaming &&\n        !this.props.isDeleting\n      ) {\n        render = this.props.connectDragSource(render)\n      }\n      if (\n        typeof this.props.browserProps.createFiles === 'function' ||\n        typeof this.props.browserProps.moveFolder === 'function' ||\n        typeof this.props.browserProps.moveFile === 'function'\n      ) {\n        render = this.props.connectDropTarget(render)\n      }\n    }\n    return render\n  }\n}\n\nconst dragSource = {\n  beginDrag(props) {\n    if (!props.browserProps.selection.length) {\n      props.browserProps.select(props.fileKey, 'folder')\n    }\n    return {\n      key: props.fileKey,\n    }\n  },\n\n  endDrag(props, monitor, component) {\n    moveFilesAndFolders(props, monitor, component)\n  },\n}\n\nfunction dragCollect(connect, monitor) {\n  return {\n    connectDragPreview: connect.dragPreview(),\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  }\n}\n\nconst BaseFolderConnectors = {\n  dragSource,\n  dragCollect,\n}\n\nexport default BaseFolder\nexport {\n  BaseFolderConnectors,\n}\n","import React from 'react'\nimport ClassNames from 'classnames'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport flow from 'lodash/flow'\n\nimport BaseFolder, { BaseFolderConnectors } from './../base-folder.js'\nimport { BaseFileConnectors } from './../base-file.js'\n\nimport { isFolder } from '../utils'\n\nclass RawListThumbnailFolder extends BaseFolder {\n  render() {\n    const {\n      isOpen, isDragging, isDeleting, isRenaming, isDraft, isOver, isSelected,\n      url, action, browserProps, depth, keyDerived, connectDragPreview,\n    } = this.props\n\n    const icon = browserProps.icons[isOpen ? 'FolderOpen' : 'Folder']\n\n    const inAction = (isDragging || action)\n\n    const ConfirmDeletionRenderer = browserProps.confirmDeletionRenderer\n\n    let name\n    if (!inAction && isDeleting && browserProps.selection.length === 1) {\n      name = (\n        <ConfirmDeletionRenderer\n          handleDeleteSubmit={this.handleDeleteSubmit}\n          handleFileClick={this.handleFileClick}\n          url={url}\n        >\n          {this.getName()}\n        </ConfirmDeletionRenderer>\n      )\n    } else if ((!inAction && isRenaming) || isDraft) {\n      name = (\n        <div>\n          <form className=\"renaming\" onSubmit={this.handleRenameSubmit}>\n            <input\n              type=\"text\"\n              ref={this.selectFolderNameFromRef}\n              value={this.state.newName}\n              onChange={this.handleNewNameChange}\n              onBlur={this.handleCancelEdit}\n              autoFocus\n            />\n          </form>\n        </div>\n      )\n    } else {\n      name = (\n        <div>\n          <a onClick={this.toggleFolder}>\n            {this.getName()}\n          </a>\n        </div>\n      )\n    }\n\n    let children\n    if (isOpen && browserProps.nestChildren) {\n      children = []\n      for (let childIndex = 0; childIndex < children.length; childIndex++) {\n        const file = children[childIndex]\n\n        const thisItemProps = {\n          ...browserProps.getItemProps(file, browserProps),\n          depth: depth + 1,\n        }\n\n        if (!isFolder(file)) {\n          children.push(\n            <browserProps.fileRenderer\n              {...file}\n              {...thisItemProps}\n              browserProps={browserProps}\n              {...browserProps.fileRendererProps}\n            />\n          )\n        } else {\n          children.push(\n            <browserProps.folderRenderer\n              {...file}\n              {...thisItemProps}\n              browserProps={browserProps}\n              {...browserProps.folderRendererProps}\n            />\n          )\n        }\n      }\n      if (children.length) {\n        children = (<ul style={{ padding: '0 8px', paddingLeft: '16px' }}>{children}</ul>)\n      } else {\n        children = (<p>No items in this folder</p>)\n      }\n    }\n\n    let folder = (\n      <li\n        className={ClassNames('folder', {\n          expanded: isOpen && browserProps.nestChildren,\n          pending: action,\n          dragging: isDragging,\n          dragover: isOver,\n          selected: isSelected,\n        })}\n        onClick={this.handleFolderClick}\n        onDoubleClick={this.handleFolderDoubleClick}\n      >\n        <div className=\"item\">\n          <span className=\"thumb\">{icon}</span>\n          <span className=\"name\">{name}</span>\n        </div>\n        {children}\n      </li>\n    )\n    if (typeof browserProps.moveFolder === 'function' && keyDerived) {\n      folder = connectDragPreview(folder)\n    }\n\n    return this.connectDND(folder)\n  }\n}\n\nconst ListThumbnailFolder = flow(\n  DragSource('folder', BaseFolderConnectors.dragSource, BaseFolderConnectors.dragCollect), \n  DropTarget(['file', 'folder', NativeTypes.FILE], BaseFileConnectors.targetSource, BaseFileConnectors.targetCollect)\n)(RawListThumbnailFolder)\n\nexport default ListThumbnailFolder\nexport { RawListThumbnailFolder }\n","import React from 'react'\nimport ClassNames from 'classnames'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport flow from 'lodash/flow'\n\nimport BaseFolder, { BaseFolderConnectors } from './../base-folder.js'\nimport { BaseFileConnectors } from './../base-file.js'\n\nclass RawTableFolder extends BaseFolder {\n  render() {\n    const {\n      isOpen, isDragging, isDeleting, isRenaming, isDraft, isOver, isSelected,\n      action, url, browserProps, connectDragPreview, depth,\n    } = this.props\n\n    const icon = browserProps.icons[isOpen ? 'FolderOpen' : 'Folder']\n    const inAction = (isDragging || action)\n\n    const ConfirmDeletionRenderer = browserProps.confirmDeletionRenderer\n\n    let name\n    if (!inAction && isDeleting && browserProps.selection.length === 1) {\n      name = (\n        <ConfirmDeletionRenderer\n          handleDeleteSubmit={this.handleDeleteSubmit}\n          handleFileClick={this.handleFileClick}\n          url={url}\n        >\n          {icon}\n          {this.getName()}\n        </ConfirmDeletionRenderer>\n      )\n    } else if ((!inAction && isRenaming) || isDraft) {\n      name = (\n        <div>\n          <form className=\"renaming\" onSubmit={this.handleRenameSubmit}>\n            {icon}\n            <input\n              type=\"text\"\n              ref={this.selectFolderNameFromRef}\n              value={this.state.newName}\n              onChange={this.handleNewNameChange}\n              onBlur={this.handleCancelEdit}\n              autoFocus\n            />\n          </form>\n        </div>\n      )\n    } else {\n      name = (\n        <div>\n          <a onClick={this.toggleFolder}>\n            {icon}\n            {this.getName()}\n          </a>\n        </div>\n      )\n    }\n\n    let draggable = (\n      <div>\n        {name}\n      </div>\n    )\n    if (typeof browserProps.moveFile === 'function') {\n      draggable = connectDragPreview(draggable)\n    }\n\n    const folder = (\n      <tr\n        className={ClassNames('folder', {\n          pending: action,\n          dragging: isDragging,\n          dragover: isOver,\n          selected: isSelected,\n        })}\n        onClick={this.handleFolderClick}\n        onDoubleClick={this.handleFolderDoubleClick}\n      >\n        <td className=\"name\">\n          <div style={{ paddingLeft: (depth * 16) + 'px' }}>\n            {draggable}\n          </div>\n        </td>\n        {/* <td />\n        <td /> */}\n      </tr>\n    )\n\n    return this.connectDND(folder)\n  }\n}\n\nconst TableFolder = flow(\n  DragSource('folder', BaseFolderConnectors.dragSource, BaseFolderConnectors.dragCollect),\n  DropTarget(['file', 'folder', NativeTypes.FILE], BaseFileConnectors.targetSource, BaseFileConnectors.targetCollect)\n)(RawTableFolder)\n\nexport default TableFolder\nexport { RawTableFolder }\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ConfirmDeletion = (props) => {\n  const {\n    children,\n    handleDeleteSubmit,\n    handleFileClick,\n    url,\n  } = props\n\n  return (\n    <form className=\"deleting\" onSubmit={handleDeleteSubmit}>\n      <a\n        href={url}\n        download=\"download\"\n        onClick={handleFileClick}\n      >\n        {children}\n      </a>\n      <div>\n        <button type=\"submit\">\n          Confirm Deletion\n        </button>\n      </div>\n    </form>\n  )\n}\n\nConfirmDeletion.propTypes = {\n  children: PropTypes.node,\n  handleDeleteSubmit: PropTypes.func,\n  handleFileClick: PropTypes.func,\n  url: PropTypes.string,\n}\n\nConfirmDeletion.defaultProps = {\n  url: '#',\n}\n\nexport default ConfirmDeletion\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst MultipleConfirmDeletion = (props) => {\n  const {\n    handleDeleteSubmit,\n  } = props\n\n  return (\n    <button className=\"deleting\" onClick={handleDeleteSubmit}>\n      Confirm Deletion\n    </button>\n  )\n}\n\nMultipleConfirmDeletion.propTypes = {\n  handleDeleteSubmit: PropTypes.func,\n}\n\nexport default MultipleConfirmDeletion\n","import { format, startOfMonth, endOfMonth } from 'date-fns'\nimport { relativeTimeWindows } from './utils'\nimport { isFolder } from '../utils'\n\nexport default function(files, root) {\n  const timeWindows = relativeTimeWindows()\n\n  for (let fileIndex = 0; fileIndex < files.length; fileIndex++) {\n    const file = files[fileIndex]\n    if (isFolder(file)) { continue }\n    const newFile = {\n      ...file,\n      keyDerived: true,\n    }\n\n    let allocated = false\n    const fileModified = +newFile.modified\n    for (let windex = 0; windex < timeWindows.length; windex++) {\n      const timeWindow = timeWindows[windex]\n      if (fileModified > +timeWindow.begins && fileModified <= +timeWindow.ends) {\n        timeWindow.items.push(newFile)\n        allocated = true\n        break\n      }\n    }\n    if (!allocated) {\n      const newWindow = {\n        name: format(newFile.modified, 'MMMM yyyy'),\n        begins: startOfMonth(newFile.modified),\n        ends: endOfMonth(newFile.modified),\n        items: [],\n      }\n      newWindow.items.push(newFile)\n      timeWindows.push(newWindow)\n    }\n  }\n\n  const grouped = []\n  for (let windex = 0; windex < timeWindows.length; windex++) {\n    const timeWindow = timeWindows[windex]\n    if (!timeWindow.items.length) { continue }\n    grouped.push({\n      key: `${timeWindow.name.toLowerCase().replace(' ', '_')}/`,\n      name: timeWindow.name,\n      children: timeWindow.items,\n      size: 0,\n    })\n  }\n\n  return grouped\n}\n","const NUMBER_GROUPS = /(-?\\d*\\.?\\d+)/g\n\nfunction naturalSortComparer(a, b) {\n  const aa = String(a.name).split(NUMBER_GROUPS)\n  const bb = String(b.name).split(NUMBER_GROUPS)\n  const min = Math.min(aa.length, bb.length)\n\n  for (let i = 0; i < min; i++) {\n    const x = parseFloat(aa[i]) || aa[i].toLowerCase()\n    const y = parseFloat(bb[i]) || bb[i].toLowerCase()\n    if (x < y) return -1\n    else if (x > y) return 1\n  }\n\n  return 0\n}\n\nexport { naturalSortComparer }\n","import { naturalSortComparer } from './utils.js'\n\nfunction naturalDraftComparer(a, b) {\n  if (a.draft && !b.draft) {\n    return 1\n  } else if (b.draft && !a.draft) {\n    return -1\n  }\n  return naturalSortComparer(a, b)\n}\n\nfunction naturalSort(allFiles) {\n  let folders = []\n  let files = []\n\n  for (let fileIndex = 0; fileIndex < allFiles.length; fileIndex++) {\n    const file = allFiles[fileIndex]\n    const keyFolders = (file.newKey || file.key).split('/')\n    if (file.children) {\n      if (!file.name) {\n        file.name = keyFolders[keyFolders.length - 2]\n      }\n      folders.push(file)\n    } else {\n      if (!file.name) {\n        file.name = keyFolders[keyFolders.length - 1]\n      }\n      files.push(file)\n    }\n  }\n\n  files = files.sort(naturalSortComparer)\n  folders = folders.sort(naturalDraftComparer)\n\n  for (let folderIndex = 0; folderIndex < folders.length; folderIndex++) {\n    const folder = folders[folderIndex]\n    folder.children = naturalSort(folder.children)\n  }\n\n  let sortedFiles = []\n  sortedFiles = sortedFiles.concat(folders)\n  sortedFiles = sortedFiles.concat(files)\n  return sortedFiles\n}\n\nexport default function(files) {\n  return naturalSort(files)\n}\n","import { compareAsc } from 'date-fns'\n\nfunction lastModifiedSort(allFiles) {\n  const folders = []\n  let files = []\n  for (let fileIndex = 0; fileIndex < allFiles.length; fileIndex++) {\n    const file = allFiles[fileIndex]\n    const keyFolders = (file.newKey || file.key).split('/')\n    if (file.children) {\n      // file.name = keyFolders[keyFolders.length - 2]\n      folders.push(file)\n    } else {\n      file.name = keyFolders[keyFolders.length - 1]\n      files.push(file)\n    }\n  }\n\n  files = files.sort(compareAsc)\n\n  for (let folderIndex = 0; folderIndex < folders.length; folderIndex++) {\n    const folder = folders[folderIndex]\n    folder.children = lastModifiedSort(folder.children)\n  }\n\n  let sortedFiles = []\n  sortedFiles = sortedFiles.concat(folders)\n  sortedFiles = sortedFiles.concat(files)\n  return sortedFiles\n}\n\nexport default function(files) {\n  return lastModifiedSort(files)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Actions = (props) => {\n  const {\n    selectedItems,\n    isFolder,\n    icons,\n    nameFilter,\n\n    canCreateFile,\n    onCreateFile,\n\n    canCreateFolder,\n    onCreateFolder,\n\n    canRenameFile,\n    onRenameFile,\n\n    canRenameFolder,\n    onRenameFolder,\n\n    canDeleteFile,\n    onDeleteFile,\n\n    canDeleteFolder,\n    onDeleteFolder,\n\n    canDownloadFile,\n    onDownloadFile,\n\n    canDownloadFolder,\n    onDownloadFolder,\n\n  } = props\n\n  /** @type any */\n  let actions = []\n\n  if (selectedItems.length) {\n    // Something is selected. Build custom actions depending on what it is.\n    const selectedItemsAction = selectedItems.filter(item => item.action)\n    if (selectedItemsAction.length === selectedItems.length && [...new Set(selectedItemsAction)].length === 1) {\n      // Selected item has an active action against it. Disable all other actions.\n      let actionText\n      switch (selectedItemsAction[0].action) {\n        case 'delete':\n          actionText = 'Deleting ...'\n          break\n\n        case 'rename':\n          actionText = 'Renaming ...'\n          break\n\n        default:\n          actionText = 'Moving ...'\n          break\n      }\n\n      actions = (\n        // TODO: Enable plugging in custom spinner.\n        <div className=\"item-actions\">\n          {icons.Loading} {actionText}\n        </div>\n      )\n    } else {\n      if (isFolder && canCreateFolder && !nameFilter) {\n        actions.push(\n          <li key=\"action-add-folder\">\n            <a\n              onClick={onCreateFolder}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Folder}\n              &nbsp;Add Subfolder\n            </a>\n          </li>\n        )\n      }\n      if (isFolder && canCreateFile && !nameFilter) {\n        actions.push(\n          <li key=\"action-add-file\">\n            <a\n              onClick={onCreateFile}\n              href=\"#\"\n              role=\"button\"\n              id=\"addfile\"\n            >\n              {icons.Folder}\n              &nbsp;Add File\n            </a>\n          </li>\n        )\n      }\n\n      const itemsWithoutKeyDerived = selectedItems.find(item => !item.keyDerived)\n      if (!itemsWithoutKeyDerived && !isFolder && canRenameFile && selectedItems.length === 1) {\n        actions.push(\n          <li key=\"action-rename\">\n            <a\n              onClick={onRenameFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Rename}\n              &nbsp;Rename\n            </a>\n          </li>\n        )\n      } else if (!itemsWithoutKeyDerived && isFolder && canRenameFolder) {\n        actions.push(\n          <li key=\"action-rename\">\n            <a\n              onClick={onRenameFolder}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Rename}\n              &nbsp;Rename\n            </a>\n          </li>\n        )\n      }\n\n      if (!itemsWithoutKeyDerived && !isFolder && canDeleteFile) {\n        actions.push(\n          <li key=\"action-delete\">\n            <a\n              onClick={onDeleteFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Delete}\n              &nbsp;Delete\n            </a>\n          </li>\n        )\n      } else if (!itemsWithoutKeyDerived && isFolder && canDeleteFolder) {\n        actions.push(\n          <li key=\"action-delete\">\n            <a\n              onClick={onDeleteFolder}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Delete}\n              &nbsp;Delete\n            </a>\n          </li>\n        )\n      }\n\n      if ((!isFolder && canDownloadFile) || (isFolder && canDownloadFolder)) {\n        actions.push(\n          <li key=\"action-download\">\n            <a\n              onClick={isFolder ? onDownloadFolder : onDownloadFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Download}\n              &nbsp;Download\n            </a>\n          </li>\n        )\n      }\n\n      if (actions.length) {\n        actions = (<ul className=\"item-actions\">{actions}</ul>)\n      } else {\n        actions = (<div className=\"item-actions\">&nbsp;</div>)\n      }\n    }\n  } else {\n    // Nothing selected: We're in the 'root' folder. Only allowed action is adding a folder.\n    if (canCreateFolder && !nameFilter) {\n      actions.push(\n        <li key=\"action-add-folder\">\n          <a\n            onClick={onCreateFolder}\n            href=\"#\"\n            role=\"button\"\n          >\n            {icons.Folder}\n            &nbsp;Add Folder\n          </a>\n        </li>\n      )\n    }\n    if (canCreateFile && !nameFilter) {\n      actions.push(\n        <li key=\"action-add-file\">\n          <a\n            onClick={onCreateFile}\n            href=\"#\"\n            role=\"button\"\n            id=\"addfile\"\n          >\n            {icons.File}\n            &nbsp;Add File\n          </a>\n        </li>\n      )\n    }\n\n    if (actions.length) {\n      actions = (<ul className=\"item-actions\">{actions}</ul>)\n    } else {\n      actions = (<div className=\"item-actions\">&nbsp;</div>)\n    }\n  }\n  return actions\n}\n\nActions.propTypes = {\n  selectedItems: PropTypes.arrayOf(PropTypes.object),\n  isFolder: PropTypes.bool,\n  icons: PropTypes.object,\n  nameFilter: PropTypes.string,\n\n  canCreateFile: PropTypes.bool,\n  onCreateFile: PropTypes.func,\n\n  canCreateFolder: PropTypes.bool,\n  onCreateFolder: PropTypes.func,\n\n  canRenameFile: PropTypes.bool,\n  onRenameFile: PropTypes.func,\n\n  canRenameFolder: PropTypes.bool,\n  onRenameFolder: PropTypes.func,\n\n  canDeleteFile: PropTypes.bool,\n  onDeleteFile: PropTypes.func,\n\n  canDeleteFolder: PropTypes.bool,\n  onDeleteFolder: PropTypes.func,\n\n  canDownloadFile: PropTypes.bool,\n  onDownloadFile: PropTypes.func,\n\n  canDownloadFolder: PropTypes.bool,\n  onDownloadFolder: PropTypes.func,\n}\n\nActions.defaultProps = {\n  selectedItems: [],\n  isFolder: false,\n  icons: {},\n  nameFilter: '',\n\n  canCreateFile: false,\n  onCreateFile: null,\n\n  canCreateFolder: false,\n  onCreateFolder: null,\n\n  canRenameFile: false,\n  onRenameFile: null,\n\n  canRenameFolder: false,\n  onRenameFolder: null,\n\n  canDeleteFile: false,\n  onDeleteFile: null,\n\n  canDeleteFolder: false,\n  onDeleteFolder: null,\n\n  canDownloadFile: false,\n  onDownloadFile: null,\n\n  canDownloadFolder: false,\n  onDownloadFolder: null,\n}\n\nexport default Actions\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n// drag and drop\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\n// default components (most overridable)\nimport { DefaultDetail } from './details'\nimport { DefaultFilter } from './filters'\n\n// default renderers\nimport { TableHeader } from './headers'\nimport { TableFile } from './files'\nimport { TableFolder } from './folders'\nimport { DefaultConfirmDeletion, MultipleConfirmDeletion } from './confirmations'\n\n// default processors\nimport { GroupByFolder } from './groupers'\nimport { SortByName } from './sorters'\n\nimport { isFolder } from './utils'\nimport { DefaultAction } from './actions'\n\nconst SEARCH_RESULTS_PER_PAGE = 20\nconst regexForNewFolderOrFileSelection = /.*\\/__new__[/]?$/gm\n\nfunction getItemProps(file, browserProps) {\n  return {\n    key: `file-${file.key}`,\n    fileKey: file.key,\n    isSelected: (browserProps.selection.includes(file.key)),\n    isOpen: file.key in browserProps.openFolders || browserProps.nameFilter,\n    isRenaming: browserProps.activeAction === 'rename' && browserProps.actionTargets.includes(file.key),\n    isDeleting: browserProps.activeAction === 'delete' && browserProps.actionTargets.includes(file.key),\n    isDraft: !!file.draft,\n  }\n}\n\nclass RawFileBrowser extends React.Component {\n  static propTypes = {\n    files: PropTypes.arrayOf(PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      modified: PropTypes.number,\n      size: PropTypes.number,\n    })).isRequired,\n    actions: PropTypes.node,\n    showActionBar: PropTypes.bool.isRequired,\n    canFilter: PropTypes.bool.isRequired,\n    showFoldersOnFilter: PropTypes.bool,\n    noFilesMessage: PropTypes.string,\n\n    group: PropTypes.func.isRequired,\n    sort: PropTypes.func.isRequired,\n\n    icons: PropTypes.shape({\n      Folder: PropTypes.element,\n      FolderOpen: PropTypes.element,\n      File: PropTypes.element,\n      PDF: PropTypes.element,\n      Image: PropTypes.element,\n      Delete: PropTypes.element,\n      Rename: PropTypes.element,\n      Loading: PropTypes.element,\n      Download: PropTypes.element,\n    }),\n\n    nestChildren: PropTypes.bool.isRequired,\n    renderStyle: PropTypes.oneOf([\n      'list',\n      'table',\n    ]).isRequired,\n\n    startOpen: PropTypes.bool.isRequired, // TODO: remove?\n\n    headerRenderer: PropTypes.func,\n    headerRendererProps: PropTypes.object,\n    filterRenderer: PropTypes.func,\n    filterRendererProps: PropTypes.object,\n    fileRenderer: PropTypes.func,\n    fileRendererProps: PropTypes.object,\n    folderRenderer: PropTypes.func,\n    folderRendererProps: PropTypes.object,\n    detailRenderer: PropTypes.func,\n    detailRendererProps: PropTypes.object,\n    actionRenderer: PropTypes.func,\n    confirmDeletionRenderer: PropTypes.func,\n    confirmMultipleDeletionRenderer: PropTypes.func,\n\n    onCreateFile: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onCreateFolder: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onMoveFile: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onMoveFolder: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onRenameFile: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onRenameFolder: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onDeleteFile: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onDeleteFolder: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onDownloadFile: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onDownloadFolder: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n    onSelect: PropTypes.func,\n    onSelectFile: PropTypes.func,\n    onSelectFolder: PropTypes.func,\n\n    onPreviewOpen: PropTypes.func,\n    onPreviewClose: PropTypes.func,\n\n    onFolderOpen: PropTypes.func,\n    onFolderClose: PropTypes.func,\n  }\n\n  static defaultProps = {\n    showActionBar: true,\n    canFilter: true,\n    showFoldersOnFilter: false,\n    noFilesMessage: 'No files.',\n\n    group: GroupByFolder,\n    sort: SortByName,\n\n    nestChildren: false,\n    renderStyle: 'table',\n\n    startOpen: false,\n\n    headerRenderer: TableHeader,\n    headerRendererProps: {},\n    filterRenderer: DefaultFilter,\n    filterRendererProps: {},\n    fileRenderer: TableFile,\n    fileRendererProps: {},\n    folderRenderer: TableFolder,\n    folderRendererProps: {},\n    detailRenderer: DefaultDetail,\n    detailRendererProps: {},\n    actionRenderer: DefaultAction,\n    confirmDeletionRenderer: DefaultConfirmDeletion,\n    confirmMultipleDeletionRenderer: MultipleConfirmDeletion,\n\n    icons: {},\n\n    onSelect: (fileOrFolder) => { }, // Always called when a file or folder is selected\n    onSelectFile: (file) => { }, //    Called after onSelect, only on file selection\n    onSelectFolder: (folder) => { }, //    Called after onSelect, only on folder selection\n\n    onPreviewOpen: (file) => { }, // File opened\n    onPreviewClose: (file) => { }, // File closed\n\n    onFolderOpen: (folder) => { }, // Folder opened\n    onFolderClose: (folder) => { }, // Folder closed\n  }\n\n  state = {\n    openFolders: {},\n    selection: [],\n    activeAction: null,\n    actionTargets: [],\n\n    nameFilter: '',\n    searchResultsShown: SEARCH_RESULTS_PER_PAGE,\n\n    previewFile: null,\n\n    addFolder: null,\n  }\n\n  componentDidMount() {\n    if (this.props.renderStyle === 'table' && this.props.nestChildren) {\n      console.warn('Invalid settings: Cannot nest table children in file browser')\n    }\n\n    window.addEventListener('click', this.handleGlobalClick)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.handleGlobalClick)\n  }\n\n  getFile = (key) => {\n    let hasPrefix = false\n    const exactFolder = this.props.files.find((f) => {\n      if (f.key.startsWith(key)) {\n        hasPrefix = true\n      }\n      return f.key === key\n    })\n    if (exactFolder) {\n      return exactFolder\n    }\n    if (hasPrefix) {\n      return { key, modified: 0, size: 0, relativeKey: key }\n    }\n  }\n\n  // item manipulation\n  createFile = (files, prefix) => {\n    this.setState(prevState => {\n      const stateChanges = { selection: [] }\n      if (prefix) {\n        stateChanges.openFolders = {\n          ...prevState.openFolders,\n          [prefix]: true,\n        }\n      }\n      return stateChanges\n    }, () => {\n      this.props.onCreateFile(files, prefix)\n    })\n  }\n\n  createFolder = (key) => {\n    this.setState({\n      activeAction: null,\n      actionTargets: [],\n      selection: [key],\n    }, () => {\n      this.props.onCreateFolder(key)\n    })\n  }\n\n  moveFile = (oldKey, newKey) => {\n    this.setState({\n      activeAction: null,\n      actionTargets: [],\n      selection: [newKey],\n    }, () => {\n      this.props.onMoveFile(oldKey, newKey)\n    })\n  }\n\n  moveFolder = (oldKey, newKey) => {\n    this.setState(prevState => {\n      const stateChanges = {\n        activeAction: null,\n        actionTargets: [],\n        selection: [newKey],\n      }\n      if (oldKey in prevState.openFolders) {\n        stateChanges.openFolders = {\n          ...prevState.openFolders,\n          [newKey]: true,\n        }\n      }\n      return stateChanges\n    }, () => {\n      this.props.onMoveFolder(oldKey, newKey)\n    })\n  }\n\n  renameFile = (oldKey, newKey) => {\n    this.setState({\n      activeAction: null,\n      actionTargets: [],\n      selection: [newKey],\n    }, () => {\n      this.props.onRenameFile(oldKey, newKey)\n    })\n  }\n\n  renameFolder = (oldKey, newKey) => {\n    this.setState(prevState => {\n      const stateChanges = {\n        activeAction: null,\n        actionTargets: [],\n      }\n      if (prevState.selection[0].substr(0, oldKey.length) === oldKey) {\n        stateChanges.selection = [prevState.selection[0].replace(oldKey, newKey)]\n      }\n      if (oldKey in prevState.openFolders) {\n        stateChanges.openFolders = {\n          ...prevState.openFolders,\n          [newKey]: true,\n        }\n      }\n      return stateChanges\n    }, () => {\n      this.props.onRenameFolder(oldKey, newKey)\n    })\n  }\n\n  deleteFile = (keys) => {\n    this.setState({\n      activeAction: null,\n      actionTargets: [],\n      selection: [],\n    }, () => {\n      this.props.onDeleteFile(keys)\n    })\n  }\n\n  deleteFolder = (key) => {\n    this.setState(prevState => {\n      const stateChanges = {\n        activeAction: null,\n        actionTargets: [],\n        selection: [],\n      }\n      if (key in prevState.openFolders) {\n        stateChanges.openFolders = { ...prevState.openFolders }\n        delete stateChanges.openFolders[key]\n      }\n      return stateChanges\n    }, () => {\n      this.props.onDeleteFolder(key)\n    })\n  }\n\n  downloadFile = (keys) => {\n    this.setState({\n      activeAction: null,\n      actionTargets: [],\n    }, () => {\n      this.props.onDownloadFile(keys)\n    })\n  }\n\n  downloadFolder = (keys) => {\n    this.setState({\n      activeAction: null,\n      actionTargets: [],\n    }, () => {\n      this.props.onDownloadFolder(keys)\n    })\n  }\n\n  // browser manipulation\n  beginAction = (action, keys) => {\n    this.setState({\n      activeAction: action,\n      actionTargets: keys || [],\n    })\n  }\n\n  endAction = () => {\n    if (this.state.selection && this.state.selection.length > 0 && (\n      this.state.selection.filter((selection) => selection.match(regexForNewFolderOrFileSelection)).length > 0\n    )) {\n      this.setState({ selection: [] })\n    }\n    this.beginAction(null, null)\n  }\n\n  select = (key, selectedType, ctrlKey, shiftKey) => {\n    const { actionTargets } = this.state\n    const shouldClearState = actionTargets.length && !actionTargets.includes(key)\n    const selected = this.getFile(key)\n\n    let newSelection = [key]\n    if (ctrlKey || shiftKey) {\n      const indexOfKey = this.state.selection.indexOf(key)\n      if (indexOfKey !== -1) {\n        newSelection = [...this.state.selection.slice(0, indexOfKey), ...this.state.selection.slice(indexOfKey + 1)]\n      } else {\n        newSelection = [...this.state.selection, key]\n      }\n    }\n\n    this.setState(prevState => ({\n      selection: newSelection,\n      actionTargets: shouldClearState ? [] : actionTargets,\n      activeAction: shouldClearState ? null : prevState.activeAction,\n    }), () => {\n      this.props.onSelect(selected)\n\n      if (selectedType === 'file') this.props.onSelectFile(selected)\n      if (selectedType === 'folder') this.props.onSelectFolder(selected)\n    })\n  }\n\n  preview = (file) => {\n    if (this.state.previewFile && this.state.previewFile.key !== file.key) this.closeDetail()\n\n    this.setState({\n      previewFile: file,\n    }, () => {\n      this.props.onPreviewOpen(file)\n    })\n  }\n\n  closeDetail = () => {\n    this.setState({\n      previewFile: null,\n    }, () => {\n      this.props.onPreviewClose(this.state.previewFile)\n    })\n  }\n\n  handleShowMoreClick = (event) => {\n    event.preventDefault()\n    this.setState(prevState => ({\n      searchResultsShown: prevState.searchResultsShown + SEARCH_RESULTS_PER_PAGE,\n    }))\n  }\n\n  toggleFolder = (folderKey) => {\n    const isOpen = folderKey in this.state.openFolders\n    this.setState(prevState => {\n      const stateChanges = {\n        openFolders: { ...prevState.openFolders },\n      }\n      if (isOpen) {\n        delete stateChanges.openFolders[folderKey]\n      } else {\n        stateChanges.openFolders[folderKey] = true\n      }\n      return stateChanges\n    }, () => {\n      const callback = isOpen ? 'onFolderClose' : 'onFolderOpen'\n      this.props[callback](this.getFile(folderKey))\n    })\n  }\n\n  openFolder = (folderKey) => {\n    this.setState(prevState => ({\n      openFolders: {\n        ...prevState.openFolders,\n        [folderKey]: true,\n      },\n    }), () => {\n      this.props.onFolderOpen(this.getFile(folderKey))\n    })\n  }\n\n  // event handlers\n  handleGlobalClick = (event) => {\n    const inBrowser = !!((this.browserRef && this.browserRef.contains(event.target)) || event.target.id === 'addfile')\n    console.log(event.target.id)\n    if (!inBrowser) {\n      this.setState({\n        selection: [],\n        actionTargets: [],\n        activeAction: null,\n      })\n    }\n  }\n  handleActionBarRenameClick = (event) => {\n    event.preventDefault()\n    this.beginAction('rename', this.state.selection)\n  }\n  handleActionBarDeleteClick = (event) => {\n    event.preventDefault()\n    this.beginAction('delete', this.state.selection)\n  }\n  handleActionBarAddFolderClick = (event) => {\n    event.preventDefault()\n    if (this.state.activeAction === 'createFolder') {\n      return\n    }\n    this.setState(prevState => {\n      let addKey = ''\n      if (prevState.selection && prevState.selection.length > 0) {\n        addKey += prevState.selection\n        if (addKey.substr(addKey.length - 1, addKey.length) !== '/') {\n          addKey += '/'\n        }\n      }\n\n      if (addKey !== '__new__/' && !addKey.endsWith('/__new__/')) addKey += '__new__/'\n      const stateChanges = {\n        actionTargets: [addKey],\n        activeAction: 'createFolder',\n        selection: [addKey],\n      }\n      if (prevState.selection && prevState.selection.length > 0) {\n        stateChanges.openFolders = {\n          ...prevState.openFolders,\n          [this.state.selection]: true,\n        }\n      }\n      return stateChanges\n    })\n  }\n  handleActionBarAddFileClick = (event) => {\n    event.preventDefault()\n    if (this.state.activeAction === 'createFile') {\n      return\n    }\n    this.setState(prevState => {\n      let addKey = ''\n      if (prevState.selection && prevState.selection.length > 0) {\n        addKey += prevState.selection\n        if (addKey.substr(addKey.length - 1, addKey.length) !== '/') {\n          addKey += '/'\n        }\n      }\n\n      if (addKey !== '__new__' && !addKey.endsWith('/__new__')) addKey += '__new__'\n      const stateChanges = {\n        actionTargets: [addKey],\n        activeAction: 'createFile',\n        selection: [addKey],\n      }\n      if (prevState.selection && prevState.selection.length > 0) {\n        stateChanges.openFiles = {\n          ...prevState.openFiles,\n          [this.state.selection]: true,\n        }\n      }\n      return stateChanges\n    })\n  }\n  handleActionBarDownloadClick = (event) => {\n    event.preventDefault()\n\n    const files = this.getFiles()\n    const selectedItems = this.getSelectedItems(files)\n\n    const selectionIsFolder = (selectedItems.length === 1 && isFolder(selectedItems[0]))\n    if (selectionIsFolder) {\n      this.downloadFolder(this.state.selection)\n      return\n    }\n\n    this.downloadFile(this.state.selection)\n  }\n\n  updateFilter = (newValue) => {\n    this.setState({\n      nameFilter: newValue,\n      searchResultsShown: SEARCH_RESULTS_PER_PAGE,\n    })\n  }\n\n  getBrowserProps() {\n    return {\n      // browser config\n      nestChildren: this.props.nestChildren,\n      fileRenderer: this.props.fileRenderer,\n      fileRendererProps: this.props.fileRendererProps,\n      folderRenderer: this.props.folderRenderer,\n      folderRendererProps: this.props.folderRendererProps,\n      confirmDeletionRenderer: this.props.confirmDeletionRenderer,\n      confirmMultipleDeletionRenderer: this.props.confirmMultipleDeletionRenderer,\n      icons: this.props.icons,\n\n      // browser state\n      openFolders: this.state.openFolders,\n      nameFilter: this.state.nameFilter,\n      selection: this.state.selection,\n      activeAction: this.state.activeAction,\n      actionTargets: this.state.actionTargets,\n\n      // browser manipulation\n      select: this.select,\n      openFolder: this.openFolder,\n      toggleFolder: this.toggleFolder,\n      beginAction: this.beginAction,\n      endAction: this.endAction,\n      preview: this.preview,\n\n      // item manipulation\n      createFile: this.props.onCreateFile ? this.createFile : undefined,\n      createFolder: this.props.onCreateFolder ? this.createFolder : undefined,\n      renameFile: this.props.onRenameFile ? this.renameFile : undefined,\n      renameFolder: this.props.onRenameFolder ? this.renameFolder : undefined,\n      moveFile: this.props.onMoveFile ? this.moveFile : undefined,\n      moveFolder: this.props.onMoveFolder ? this.moveFolder : undefined,\n      deleteFile: this.props.onDeleteFile ? this.deleteFile : undefined,\n      deleteFolder: this.props.onDeleteFolder ? this.deleteFolder : undefined,\n\n      getItemProps: getItemProps,\n    }\n  }\n\n  renderActionBar(selectedItems) {\n    const {\n      icons, canFilter,\n      filterRendererProps, filterRenderer: FilterRenderer,\n      actionRenderer: ActionRenderer,\n      onCreateFile,\n      onCreateFolder, onRenameFile, onRenameFolder,\n      onDeleteFile, onDeleteFolder, onDownloadFile,\n      onDownloadFolder,\n    } = this.props\n    const browserProps = this.getBrowserProps()\n    const selectionIsFolder = (selectedItems.length === 1 && isFolder(selectedItems[0]))\n    let filter\n    if (canFilter) {\n      filter = (\n        <FilterRenderer\n          value={this.state.nameFilter}\n          updateFilter={this.updateFilter}\n          {...filterRendererProps}\n        />\n      )\n    }\n\n    const actions = (\n      <ActionRenderer\n        browserProps={browserProps}\n\n        selectedItems={selectedItems}\n        isFolder={selectionIsFolder}\n\n        icons={icons}\n        nameFilter={this.state.nameFilter}\n\n        canCreateFile={typeof onCreateFile === 'function'}\n        onCreateFile={this.handleActionBarAddFileClick}\n\n        canCreateFolder={typeof onCreateFolder === 'function'}\n        onCreateFolder={this.handleActionBarAddFolderClick}\n\n        canRenameFile={typeof onRenameFile === 'function'}\n        onRenameFile={this.handleActionBarRenameClick}\n\n        canRenameFolder={typeof onRenameFolder === 'function'}\n        onRenameFolder={this.handleActionBarRenameClick}\n\n        canDeleteFile={typeof onDeleteFile === 'function'}\n        onDeleteFile={this.handleActionBarDeleteClick}\n\n        canDeleteFolder={typeof onDeleteFolder === 'function'}\n        onDeleteFolder={this.handleActionBarDeleteClick}\n\n        canDownloadFile={typeof onDownloadFile === 'function'}\n        onDownloadFile={this.handleActionBarDownloadClick}\n\n        canDownloadFolder={typeof onDownloadFolder === 'function'}\n        onDownloadFolder={this.handleActionBarDownloadClick}\n      />\n    )\n\n    return (\n      <div className=\"action-bar\">\n        {filter}\n        {actions}\n      </div>\n    )\n  }\n\n  renderFiles(files, depth) {\n    const {\n      fileRenderer: FileRenderer, fileRendererProps,\n      folderRenderer: FolderRenderer, folderRendererProps,\n    } = this.props\n    const browserProps = this.getBrowserProps()\n    let renderedFiles = []\n\n    files.map((file) => {\n      const thisItemProps = {\n        ...browserProps.getItemProps(file, browserProps),\n        depth: this.state.nameFilter ? 0 : depth,\n      }\n\n      if (!isFolder(file)) {\n        renderedFiles.push(\n          <FileRenderer\n            {...file}\n            {...thisItemProps}\n            browserProps={browserProps}\n            {...fileRendererProps}\n          />\n        )\n      } else {\n        if (this.props.showFoldersOnFilter || !this.state.nameFilter) {\n          renderedFiles.push(\n            <FolderRenderer\n              {...file}\n              {...thisItemProps}\n              browserProps={browserProps}\n              {...folderRendererProps}\n            />\n          )\n        }\n        if (this.state.nameFilter || (thisItemProps.isOpen && !browserProps.nestChildren)) {\n          renderedFiles = renderedFiles.concat(this.renderFiles(file.children, depth + 1))\n        }\n      }\n    })\n    return renderedFiles\n  }\n\n  handleMultipleDeleteSubmit = () => {\n    this.deleteFolder(this.state.selection.filter(selection => selection[selection.length - 1] === '/'))\n    this.deleteFile(this.state.selection.filter(selection => selection[selection.length - 1] !== '/'))\n  }\n\n  getFiles() {\n    let files = this.props.files.concat([])\n    if (this.state.activeAction === 'createFolder') {\n      files.push({\n        key: this.state.actionTargets[0],\n        size: 0,\n        draft: true,\n      })\n    }\n    if (this.state.activeAction === 'createFile') {\n      files.push({\n        key: this.state.actionTargets[0],\n        size: 0,\n        draft: true,\n      })\n    }\n    if (this.state.nameFilter) {\n      const filteredFiles = []\n      const terms = this.state.nameFilter.toLowerCase().split(' ')\n      files.map((file) => {\n        let skip = false\n        terms.map((term) => {\n          if (file.key.toLowerCase().trim().indexOf(term) === -1) {\n            skip = true\n          }\n        })\n        if (skip) {\n          return\n        }\n        filteredFiles.push(file)\n      })\n      files = filteredFiles\n    }\n    if (typeof this.props.group === 'function') {\n      files = this.props.group(files, '')\n    } else {\n      const newFiles = []\n      files.map((file) => {\n        if (!isFolder(file)) {\n          newFiles.push(file)\n        }\n      })\n      files = newFiles\n    }\n    if (typeof this.props.sort === 'function') {\n      files = this.props.sort(files)\n    }\n    return files\n  }\n\n  getSelectedItems(files) {\n    const { selection } = this.state\n    const selectedItems = []\n    const findSelected = (item) => {\n      if (selection.includes(item.key)) {\n        selectedItems.push(item)\n      }\n      if (item.children) {\n        item.children.map(findSelected)\n      }\n    }\n    files.map(findSelected)\n    return selectedItems\n  }\n\n  render() {\n    const browserProps = this.getBrowserProps()\n    const headerProps = {\n      browserProps,\n      fileKey: '',\n      fileCount: this.props.files.length,\n    }\n    let renderedFiles\n\n    const files = this.getFiles()\n    const selectedItems = this.getSelectedItems(files)\n\n    let header\n    /** @type any */\n    let contents = this.renderFiles(files, 0)\n    switch (this.props.renderStyle) {\n      case 'table':\n        if (!contents.length) {\n          if (this.state.nameFilter) {\n            contents = (\n              <tr>\n                <td colSpan={100}>\n                  No files matching \"{this.state.nameFilter}\".\n                </td>\n              </tr>\n            )\n          } else {\n            contents = (\n              <tr>\n                <td colSpan={100}>\n                  {this.props.noFilesMessage}\n                </td>\n              </tr>\n            )\n          }\n        } else {\n          if (this.state.nameFilter) {\n            const numFiles = contents.length\n            contents = contents.slice(0, this.state.searchResultsShown)\n            if (numFiles > contents.length) {\n              contents.push(\n                <tr key=\"show-more\">\n                  <td colSpan={100}>\n                    <a\n                      onClick={this.handleShowMoreClick}\n                      href=\"#\"\n                    >\n                      Show more results\n                    </a>\n                  </td>\n                </tr>\n              )\n            }\n          }\n        }\n\n        if (this.props.headerRenderer) {\n          header = (\n            <thead>\n              <this.props.headerRenderer\n                {...headerProps}\n                {...this.props.headerRendererProps}\n              />\n            </thead>\n          )\n        }\n\n        renderedFiles = (\n          <table cellSpacing=\"0\" cellPadding=\"0\">\n            {header}\n            <tbody>\n              {contents}\n            </tbody>\n          </table>\n        )\n        break\n\n      case 'list':\n        if (!contents.length) {\n          if (this.state.nameFilter) {\n            contents = (<p className=\"empty\">No files matching \"{this.state.nameFilter}\"</p>)\n          } else {\n            contents = (<p className=\"empty\">No files.</p>)\n          }\n        } else {\n          let more\n          if (this.state.nameFilter) {\n            const numFiles = contents.length\n            contents = contents.slice(0, this.state.searchResultsShown)\n            if (numFiles > contents.length) {\n              more = (\n                <a\n                  onClick={this.handleShowMoreClick}\n                  href=\"#\"\n                >\n                  Show more results\n                </a>\n              )\n            }\n          }\n          contents = (\n            <div>\n              <ul>{contents}</ul>\n              {more}\n            </div>\n          )\n        }\n\n        if (this.props.headerRenderer) {\n          header = (\n            <this.props.headerRenderer\n              {...headerProps}\n              {...this.props.headerRendererProps}\n            />\n          )\n        }\n\n        renderedFiles = (\n          <div>\n            {header}\n            {contents}\n          </div>\n        )\n        break\n    }\n\n    const ConfirmMultipleDeletionRenderer = this.props.confirmMultipleDeletionRenderer\n\n    return (\n      <div className=\"rendered-react-keyed-file-browser\">\n        {this.props.actions}\n        <div className=\"rendered-file-browser\" ref={el => { this.browserRef = el }}>\n          {this.props.showActionBar && this.renderActionBar(selectedItems)}\n          {this.state.activeAction === 'delete' && this.state.selection.length > 1 &&\n            <ConfirmMultipleDeletionRenderer\n              handleDeleteSubmit={this.handleMultipleDeleteSubmit}\n            />}\n          <div className=\"files\">\n            {renderedFiles}\n          </div>\n        </div>\n        {/* {this.state.previewFile !== null && (\n          <this.props.detailRenderer\n            file={this.state.previewFile}\n            close={this.closeDetail}\n            {...this.props.detailRendererProps}\n          />\n        )} */}\n      </div>\n    )\n  }\n}\n\nclass FileBrowser extends Component {\n  render() {\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <RawFileBrowser {...this.props} />\n      </DndProvider>\n    )\n  }\n}\n\nexport default FileBrowser\n\nexport { RawFileBrowser }\n","import { isFolder } from '../utils'\n\nexport default function(files, root) {\n  const fileTree = {\n    contents: [],\n    children: {},\n  }\n\n  files.map((file) => {\n    file.relativeKey = (file.newKey || file.key).substr(root.length)\n    let currentFolder = fileTree\n    const folders = file.relativeKey.split('/')\n    folders.map((folder, folderIndex) => {\n      if (folderIndex === folders.length - 1 && isFolder(file)) {\n        for (const key in file) {\n          currentFolder[key] = file[key]\n        }\n      }\n      if (folder === '') {\n        return\n      }\n      const isAFile = (!isFolder(file) && (folderIndex === folders.length - 1))\n      if (isAFile) {\n        currentFolder.contents.push({\n          ...file,\n          keyDerived: true,\n        })\n      } else {\n        if (folder in currentFolder.children === false) {\n          currentFolder.children[folder] = {\n            contents: [],\n            children: {},\n          }\n        }\n        currentFolder = currentFolder.children[folder]\n      }\n    })\n  })\n\n  function addAllChildren(level, prefix) {\n    if (prefix !== '') {\n      prefix += '/'\n    }\n    let files = []\n    for (const folder in level.children) {\n      files.push({\n        ...level.children[folder],\n        contents: undefined,\n        keyDerived: true,\n        key: root + prefix + folder + '/',\n        relativeKey: prefix + folder + '/',\n        children: addAllChildren(level.children[folder], prefix + folder),\n        size: 0,\n      })\n    }\n    files = files.concat(level.contents)\n    return files\n  }\n\n  files = addAllChildren(fileTree, '')\n  return files\n}\n","import React from 'react'\n\n// See https://allthingssmitty.com/2016/09/12/checking-if-font-awesome-loaded/\nconst IsFontAwesomeLoaded = (version) => {\n  const prefix = version === 4 ? 'fa' : 'fas'\n  const fontNames = version === 4\n    ? ['FontAwesome', '\"FontAwesome\"']\n    : ['\"Font Awesome 5 Free\"', '\"Font Awesome 5 Pro\"']\n  let FontAwesomeLoaded = false\n  const span = document.createElement('span')\n\n  span.className = prefix\n  span.style.display = 'none'\n  document.body.insertBefore(span, document.body.firstChild)\n\n  const css = (element, property) => window.getComputedStyle(element, null).getPropertyValue(property)\n\n  if (!fontNames.includes(css(span, 'font-family'))) {\n    console.warn(\n      `Font Awesome ${version} was not detected but Font Awesome ${version} icons have been requested for \\`react-object-list\\``\n    )\n  } else {\n    FontAwesomeLoaded = true\n  }\n  document.body.removeChild(span)\n  return FontAwesomeLoaded\n}\n\nconst FontAwesomeIcons = (majorVersion = 4) => {\n  switch (majorVersion) {\n    case 4:\n      IsFontAwesomeLoaded(4)\n      return {\n        File: <i className=\"fa fa-file-o\" aria-hidden=\"true\" />,\n        Image: <i className=\"fa fa-file-image-o\" aria-hidden=\"true\" />,\n        Video: <i className=\"fa fa-file-video-o\" aria-hidden=\"true\" />,\n        Audio: <i className=\"fa fa-file-audio-o\" aria-hidden=\"true\" />,\n        Archive: <i className=\"fa fa-file-archive-o\" aria-hidden=\"true\" />,\n        Word: <i className=\"fa fa-file-word-o\" aria-hidden=\"true\" />,\n        Excel: <i className=\"fa fa-file-excel-o\" aria-hidden=\"true\" />,\n        PowerPoint: <i className=\"fa fa-file-powerpoint-o\" aria-hidden=\"true\" />,\n        Text: <i className=\"fa fa-file-text-o\" aria-hidden=\"true\" />,\n        PDF: <i className=\"fa fa-file-pdf-o\" aria-hidden=\"true\" />,\n        Rename: <i className=\"fa fa-i-cursor\" aria-hidden=\"true\" />,\n        Folder: <i className=\"fa fa-folder-o\" aria-hidden=\"true\" />,\n        FolderOpen: <i className=\"fa fa-folder-open-o\" aria-hidden=\"true\" />,\n        Delete: <i className=\"fa fa-trash-o\" aria-hidden=\"true\" />,\n        Loading: <i className=\"fa fa-circle-o-notch fa-spin\" aria-hidden=\"true\" />,\n        Download: <i className=\"fa fa-download\" aria-hidden=\"true\" />,\n      }\n    case 5:\n      IsFontAwesomeLoaded(5)\n      return {\n        File: <i className=\"far fa-file\" aria-hidden=\"true\" />,\n        Image: <i className=\"far fa-file-image\" aria-hidden=\"true\" />,\n        Video: <i className=\"far fa-file-video\" aria-hidden=\"true\" />,\n        Audio: <i className=\"far fa-file-audio\" aria-hidden=\"true\" />,\n        Archive: <i className=\"far fa-file-archive\" aria-hidden=\"true\" />,\n        Word: <i className=\"far fa-file-word\" aria-hidden=\"true\" />,\n        Excel: <i className=\"far fa-file-excel\" aria-hidden=\"true\" />,\n        PowerPoint: <i className=\"far fa-file-powerpoint\" aria-hidden=\"true\" />,\n        Text: <i className=\"far fa-file-alt\" aria-hidden=\"true\" />,\n        PDF: <i className=\"far fa-file-pdf\" aria-hidden=\"true\" />,\n        Rename: <i className=\"fas fa-i-cursor\" aria-hidden=\"true\" />,\n        Folder: <i className=\"far fa-folder\" aria-hidden=\"true\" />,\n        FolderOpen: <i className=\"far fa-folder-open\" aria-hidden=\"true\" />,\n        Delete: <i className=\"far fa-trash-alt\" aria-hidden=\"true\" />,\n        Loading: <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />,\n        Download: <i className=\"fas fa-download\" aria-hidden=\"true\" />,\n      }\n    default:\n      console.warn(\n        `Could not find config for version ${majorVersion}`,\n        'Accepted versions are: 4, 5',\n        'Please make an issue in `react-object-list` to fix this.'\n      )\n  }\n}\n\nexport default FontAwesomeIcons\n","import FileBrowser, { RawFileBrowser } from './browser'\nimport BaseFile, { BaseFileConnectors } from './base-file'\nimport BaseFolder, { BaseFolderConnectors } from './base-folder'\n\nimport * as Headers from './headers'\nimport * as FileRenderers from './files'\nimport * as FolderRenderers from './folders'\n\nimport * as Details from './details'\nimport * as Filters from './filters'\nimport * as Groupers from './groupers'\nimport * as Sorters from './sorters'\nimport * as Icons from './icons'\nimport * as Utils from './utils'\n\nexport default FileBrowser\nexport {\n  RawFileBrowser, // Use this one if you want to wrap with dragdrop context yourself.\n\n  BaseFile,\n  BaseFileConnectors,\n  BaseFolder,\n  BaseFolderConnectors,\n\n  Headers,\n  FileRenderers,\n  FolderRenderers,\n\n  Details,\n  Filters,\n  Groupers,\n  Sorters,\n  Icons,\n  Utils,\n}\n","import { useState } from 'react'\r\nimport FileBrowser, { Icons } from './FileBrowser'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport 'react-keyed-file-browser/dist/react-keyed-file-browser.css';\r\nimport './Demos.css'\r\n\r\nconst FileManager = ({ setCurrentFile }) => {\r\n    const [files, setFiles] = useState(\r\n        [\r\n            {\r\n                key: 'src/App.js',\r\n            },\r\n            {\r\n                key: 'src/app.css',\r\n            },\r\n            {\r\n                key: 'src/index.js',\r\n            },\r\n            {\r\n                key: 'src/index.css',\r\n            },\r\n            {\r\n                key: 'index.js',\r\n            },\r\n        ]\r\n    )\r\n\r\n    const handleSelectFile = (file) => {\r\n\r\n        setCurrentFile(file)\r\n    }\r\n\r\n    const handleCreateFolder = (key) => {\r\n        setFiles(files => {\r\n            files = files.concat([{\r\n                key: key,\r\n            }])\r\n            return files\r\n        })\r\n    }\r\n\r\n    const handleCreateFile = (key, prefix) => {\r\n        console.log('called')\r\n        // setFiles(files => {\r\n        //     const newFiles = files.map((file) => {\r\n        //         let newKey = prefix\r\n        //         if (prefix !== '' && prefix.substring(prefix.length - 1, prefix.length) !== '/') {\r\n        //             newKey += '/'\r\n        //         }\r\n        //         newKey += file.name\r\n        //         return {\r\n        //             key: newKey,\r\n        //             size: file.size,\r\n        //             // modified: +Moment(),\r\n        //         }\r\n        //     })\r\n\r\n        //     const uniqueNewFiles = []\r\n        //     newFiles.map((newFile) => {\r\n        //         let exists = false\r\n        //         files.map((existingFile) => {\r\n        //             if (existingFile.key === newFile.key) {\r\n        //                 exists = true\r\n        //             }\r\n        //         })\r\n        //         if (!exists) {\r\n        //             uniqueNewFiles.push(newFile)\r\n        //         }\r\n        //     })\r\n        //     files = files.concat(uniqueNewFiles)\r\n        //     return files\r\n        // })\r\n        setFiles(files => {\r\n            files = files.concat([{\r\n                key: key,\r\n            }])\r\n            return files\r\n        })\r\n    }\r\n\r\n    const handleRenameFolder = (oldKey, newKey) => {\r\n        setFiles(files => {\r\n            const newFiles = []\r\n            files.map((file) => {\r\n                if (file.key.substr(0, oldKey.length) === oldKey) {\r\n                    newFiles.push({\r\n                        ...file,\r\n                        key: file.key.replace(oldKey, newKey),\r\n                        // modified: +Moment(),\r\n                    })\r\n                } else {\r\n                    newFiles.push(file)\r\n                }\r\n            })\r\n            files = newFiles\r\n            return files\r\n        })\r\n    }\r\n\r\n    const handleRenameFile = (oldKey, newKey) => {\r\n        setFiles(files => {\r\n            const newFiles = []\r\n            files.map((file) => {\r\n                if (file.key === oldKey) {\r\n                    newFiles.push({\r\n                        ...file,\r\n                        key: newKey,\r\n                        // modified: +Moment(),\r\n                    })\r\n                } else {\r\n                    newFiles.push(file)\r\n                }\r\n            })\r\n            files = newFiles\r\n            return files\r\n        })\r\n    }\r\n\r\n    const handleDeleteFolder = (folderKey) => {\r\n        setFiles(files => {\r\n            const newFiles = []\r\n            files.map((file) => {\r\n                if (file.key.substr(0, folderKey.length) !== folderKey) {\r\n                    newFiles.push(file)\r\n                }\r\n            })\r\n            files = newFiles\r\n            return files\r\n        })\r\n    }\r\n\r\n    const handleDeleteFile = (fileKey) => {\r\n        setFiles(files => {\r\n            const newFiles = []\r\n            files.map((file) => {\r\n                if (file.key !== fileKey) {\r\n                    newFiles.push(file)\r\n                }\r\n            })\r\n            files = newFiles\r\n            return files\r\n        })\r\n    }\r\n\r\n    console.log(Icons.FontAwesome(5))\r\n\r\n    return (\r\n        <>\r\n            <div className=\"control-section\">\r\n                <FileBrowser\r\n                    files={files}\r\n                    icons={Icons.FontAwesome(4)}\r\n                    renderStyle=\"table\"\r\n\r\n                    onSelectFile={handleSelectFile}\r\n                    onCreateFolder={handleCreateFolder}\r\n                    onCreateFile={handleCreateFile}\r\n                    onMoveFolder={handleRenameFolder}\r\n                    onMoveFile={handleRenameFile}\r\n                    onRenameFolder={handleRenameFolder}\r\n                    onRenameFile={handleRenameFile}\r\n                    onDeleteFolder={handleDeleteFolder}\r\n                    onDeleteFile={handleDeleteFile}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FileManager;","import { useRef, useEffect, useState } from 'react'\nimport './App.css';\nimport useRecorder from './useRecorder'\nimport { stopwatch } from 'durations'\nimport Audio from './Audio'\nimport TextEditor from './Editor'\nimport cm from 'codemirror'\nimport FileManager from './FileManager'\n\nconst mirror = cm(function () { }, {});\nconst mirrorChange = (editor, deferred) => {\n\tvar doc = editor.getDoc();\n\n\tif (deferred.origin === 'undo') {\n\t\tdoc.setHistory(mirror.getHistory());\n\t\tmirror.undo();\n\t} else if (deferred.origin === 'redo') {\n\t\tdoc.setHistory(mirror.getHistory());\n\t\tmirror.redo();\n\t} else {\n\t\tmirror.replaceRange(deferred.text, deferred.from, deferred.to, deferred.origin);\n\t}\n\n\treturn mirror.getValue();\n}\n\nconst watch = stopwatch();\n\nfunction App() {\n\tconst [audioURL, mediaRecorder, startRecording, pauseRecording, resumeRecording, stopRecording, handleListen] = useRecorder();\n\tconst [files, setFiles] = useState([\n\t\t{\n\t\t\tkey: 'src/App.js',\n\t\t\tcontent: '',\n\t\t},\n\t\t{\n\t\t\tkey: 'src/app.css',\n\t\t\tcontent: '',\n\t\t},\n\t\t{\n\t\t\tkey: 'src/index.js',\n\t\t\tcontent: '',\n\t\t},\n\t\t{\n\t\t\tkey: 'src/index.css',\n\t\t\tcontent: '',\n\t\t},\n\t\t{\n\t\t\tkey: 'index.js',\n\t\t\tcontent: '',\n\t\t},\n\t])\n\tconst [records, setRecords] = useState([]);\n\tconst [recBuffer, setRecBuffer] = useState([]);\n\tconst [play, setPlay] = useState(false)\n\tconst [editor, setEditor] = useState(null)\n\tconst [currentFile, setCurrentFile] = useState({ key: '' })\n\tconst [editorValue, setEditorValue] = useState('')\n\n\tconst audioEle = useRef(null)\n\n\tconst initiateRecord = () => {\n\t\tsetRecords([])\n\t\tfiles.forEach(file => {\n\t\t\tsetRecords([...records, { time: 0, file: file.key, content: file.content }])\n\t\t})\n\t}\n\n\tconst handleStart = () => {\n\t\tinitiateRecord()\n\t\twatch.start()\n\t\tstartRecording()\n\t\tconsole.log(mediaRecorder.state)\n\t}\n\n\tconst handlePause = () => {\n\t\tif (mediaRecorder.state === 'paused') {\n\t\t\twatch.start()\n\t\t\tresumeRecording()\n\t\t} else {\n\t\t\twatch.stop()\n\t\t\tpauseRecording()\n\t\t}\n\t\tconsole.log(mediaRecorder.state)\n\t}\n\n\tconst handleStop = () => {\n\t\twatch.stop()\n\t\tstopRecording()\n\t\tconsole.log(mediaRecorder.state)\n\t\tconsole.log(records)\n\t}\n\n\tconst handleContentChange = (data) => {\n\t\t// setFiles(preContent => ({ ...preContent, [currentFile.key]: mirrorChange(editor, data) }))\n\t\t// if (mediaRecorder && mediaRecorder.state === 'recording') {\n\t\t// \tsetRecords([...records, { time: watch.duration().seconds() * 1000, content: data }])\n\t\t// } else {\n\t\t// \tsetRecBuffer([...recBuffer, data])\n\t\t// }\n\t\tsetEditorValue(data)\n\t\tsetFiles(prevFiles => {\n\t\t\tprevFiles.find(file => file.key === currentFile.key).content = data;\n\t\t\treturn prevFiles\n\t\t})\n\t\tif (mediaRecorder && mediaRecorder.state === 'recording') {\n\t\t\tsetRecords([...records, { time: watch.duration().seconds() * 1000, file: currentFile.key, content: data }])\n\t\t}\n\t}\n\n\tconst handleTimeChange = e => {\n\t\tif (play) {\n\t\t\t//records[0] && console.log(audioEle.current.currentTime * 1000, records[0].time)\n\t\t\tlet selected = records.filter(record => (audioEle.current.currentTime * 1000 >= record.time))\n\t\t\tselected = selected[selected.length - 1]\n\t\t\tif (selected) {\n\t\t\t\tif (currentFile.key === selected.file) {\n\t\t\t\t\tsetEditorValue(selected.content)\n\t\t\t\t}\n\t\t\t\tsetFiles(prevFiles => {\n\t\t\t\t\tprevFiles.find(file => file.key === selected.file).content = selected.content;\n\t\t\t\t\treturn prevFiles\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tconst handleAudioOnPlay = e => {\n\t\tconsole.log(\"play\")\n\t\tsetPlay(true)\n\t\t//mirror.setValue('')\n\t}\n\n\tuseEffect(() => {\n\t\tsetEditorValue(files.find(co => co.key === currentFile.key)?.content)\n\t}, [currentFile])\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<div style={{ display: 'flex', height: 'calc(100vh - 60px)' }}>\n\t\t\t\t\t<FileManager\n\t\t\t\t\t\tsetCurrentFile={setCurrentFile}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextEditor\n\t\t\t\t\t\tvalue={editorValue}\n\t\t\t\t\t\tonChange={handleContentChange}\n\t\t\t\t\t\tsetEditor={setEditor}\n\t\t\t\t\t\tfile={currentFile}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t\t<section style={{ height: '60px', background: '#263238c9' }}>\n\t\t\t\t<Audio\n\t\t\t\t\thandleStart={handleStart}\n\t\t\t\t\thandlePause={handlePause}\n\t\t\t\t\thandleStop={handleStop}\n\t\t\t\t\thandleListen={handleListen}\n\t\t\t\t\taudioURL={audioURL}\n\t\t\t\t\thandleTimeChange={handleTimeChange}\n\t\t\t\t\taudioEle={audioEle}\n\t\t\t\t\thandleAudioOnPlay={handleAudioOnPlay}\n\t\t\t\t\tmediaRecorder={mediaRecorder}\n\t\t\t\t/>\n\t\t\t</section>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}